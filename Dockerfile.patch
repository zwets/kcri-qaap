# Dockerfile to update an existing kcri-qaap image.
#
#   Dockerfile for updating an existing kcri-qaap:latest image
#   without rebuilding the whole image from scratch.
#
#   Use: docker build -t kcri-qaap -f Dockerfile.patch "."

# Start from the existing image
FROM kcri-qaap:latest

# Go back to the install root as root
USER root:root
WORKDIR /usr/src

# Note: don't 'COPY ext ext': directory ext exists, and
#       docker's intractable copy logic then nests them
#       unless you are copying multiple directories ...

# Externals
#COPY ext ./
COPY ext/unfasta/uf-stats unfasta/
#RUN cd ext/something && make clean && make && mv something /usr/local/bin/ && cd .. && rm -rf something
#RUN mkdir -p ext/picoline
#RUN cd ext/picoline && python3 setup.py install && cd .. && rm -rf picoline
#COPY ext/fastq-utils ext/fastq-utils
#RUN cd ext/fastq-utils && make clean && make fastq-stats && cp fastq-stats /usr/local/bin/ && cd .. && rm -rf fastq-utils
#COPY ext/kneaddata ext/kneaddata
#RUN cd ext/kneaddata && python setup.py install --bypass-dependencies-install && rm -rf build

# KCRI QAAP package
#COPY src/kcri/qaap/__init__.py kcri/qaap/
#COPY src/kcri/qaap/QAAP.py kcri/qaap/
#COPY src/kcri/qaap/data.py kcri/qaap/
#COPY src/kcri/qaap/services.py kcri/qaap/
#COPY src/kcri/qaap/shims/KneadData.py kcri/qaap/shims/
#COPY src/kcri/qaap/filescan.py kcri/qaap/
COPY src ./
RUN python3 setup.py install

# Drop down to the original user and workdir
USER nobody:nogroup
WORKDIR /workdir

